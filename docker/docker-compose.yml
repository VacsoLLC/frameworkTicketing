version: '3'
services:
  nginx:
    image: nginx:latest
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./data/frontend/dist:/www
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    depends_on:
      - nodeapp
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
        compress: "true"
  nodeapp:
    image: node:18
    restart: always
    working_dir: /app
    volumes:
      - ../backend:/app
      - ../frontend:/frontend
      - ./data/frontend/dist:/frontend/dist
      - ./data/backend/node_modules:/app/node_modules
      - ./data/frontend/node_modules:/frontend/node_modules
    command: sh -c "cd /frontend && yarn install && yarn run build && cd /app && yarn install && yarn run indocker"
    env_file: ../backend/.env
    environment:    
      MARIADB_HOST: mariadb
    depends_on:
      - mariadb
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
        compress: "true"
  ofelia:
    image: mcuadros/ofelia:latest
    depends_on:
      - mariadb
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro  
  mariadb:
    image: mariadb:latest
    restart: always
    env_file: ../backend/.env
    environment:
      MARIADB_DATABASE: core
      MARIADB_USER: framework
    ports:
      - '3306:3306'
    volumes:
      - ./data/mariadb:/var/lib/mysql
      - ./backup/mariadb:/backup
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./backup.sh:/backup.sh
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
        compress: "true"
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.mariadb-backup.schedule: "1 36 7 * * *"
      ofelia.job-exec.mariadb-backup.command: "bash /backup.sh"

    
      
      
        